package html;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.Date;

public class CustomReports {

	static StringBuilder htmlStringBuilder;

	public void createReportTable(String pageTitle, String colHeader1,
			String colHeader2, String colHeader3) {

		// BootStrap template

		String bootstrap = "<meta charset=\"utf-8\">"
				+ "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">"
				+ "<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">"
				+ "<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>"
				+ "<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>";

		// define a HTML String Builder
		htmlStringBuilder = new StringBuilder();

		// append html header and title
		htmlStringBuilder.append("<html><head><title>" + pageTitle
				+ "</title></head>");

		// append body
		htmlStringBuilder
				.append("<body>+"
						+ "<div class=\"container\">"
						+ "<h2>Test Report</h2>"
						+ "<p>*Report contains test case wise status</p>");

		// append table
		htmlStringBuilder.append("<table class=\"table\">");

		// append table header
		htmlStringBuilder.append("<tr><td><b>" + colHeader1
				+ "</b></td><td><b>" + colHeader2 + "</b></td><td><b>"
				+ colHeader3 + "</b></td></tr>");
	}

	public void appendTableRow(String tcID, String tcName, String tcStatus) {

		// append table row
		htmlStringBuilder.append("<tr><td>" + tcID + "</td><td>" + tcName
				+ "</td><td>" + tcStatus + "</td></tr>");

	}

	public void completeReportTable() {

		// close html file
		htmlStringBuilder.append("</table></body></html>");

		// write html string content to a file
		String fileName = "Report_"+  new Date().toString() + ".html";
		//String fileName = "Report_"+ (int)Math.floor(Math.random() * 1001) + ".html";
		try {
			WriteToFile(htmlStringBuilder.toString(), fileName);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static void WriteToFile(String fileContent, String fileName)
			throws IOException {
		String projectPath = "D:\\Workspace_test\\test\\Reports";
		String tempFile = projectPath + File.separator + fileName;
		File file = new File(tempFile);
		// if file does exists, then delete and create a new file
		/*if (file.exists()) {
			try {
				File newFileName = new File(projectPath + File.separator
						+ "backup_" + fileName);
				file.renameTo(newFileName);
				file.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}*/
		// write to file with OutputStreamWriter
		OutputStream outputStream = new FileOutputStream(file.getAbsoluteFile());
		Writer writer = new OutputStreamWriter(outputStream);
		writer.write(fileContent);
		writer.close();

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		CustomReports c = new CustomReports();

		// BeforeSuite in Testng
		c.createReportTable("Test Report", "TC Id", "TC Name", "Run Status");

		// call during each test step or in After Test
		c.appendTableRow("001", "TC1", "Completed");

		c.appendTableRow("002", "TC2", "Pending");

		c.appendTableRow("003", "TC3", "No Run");

		// After suite in testng
		c.completeReportTable();

	}

}
